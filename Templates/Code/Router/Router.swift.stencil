//
//  {{ module_name }}Router
//  {{ project_name }}
//
//  Created by {{ developer_name }} on {{ date }}.
//

import UIKit

@MainActor
protocol {{ module_name }}RouterInput: AnyObject {
    // MARK: View transitions
}

@MainActor
final class {{ module_name }}Router {
    // MARK: Lifecycle

    init(viewController: {{ module_name }}ViewController) {
        self.viewController = viewController
    }

    // MARK: Internal

    static func assembleModule(repository: {{ module_name }}RepositoryInterface) -> {{ module_name }}ViewController {
        let view = {{ module_name }}ViewController()
        let interactor = {{ module_name }}Interactor(repository: repository)
        let router = {{ module_name }}Router(viewController: view)
        let presenter = {{ module_name }}Presenter(view: view, interactor: interactor, router: router)

        view.presenter = presenter
        interactor.presenter = presenter

        return view
    }

    // MARK: Private
    
    private unowned let viewController: {{ module_name }}ViewController
}

extension {{ module_name }}Router: {{ module_name }}RouterInput {}
